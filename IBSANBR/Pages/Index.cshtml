@page
@using Newtonsoft.Json
@model IndexModel
<partial name="_Header" />
<div style="background-color:#f2f2f2;min-height:100%; margin: 16px 0 0 0;">
    <div class="ui stackable grid container">
        <div class="row">
            <div class="column">
                <h2>Pesquisa</h2>
                <form method="post" class="ui form tiny principal-form">
                    <div class="fields">
                        <div class="four wide field">
                            <select asp-for="CodigoMunicipio" class="ui search selection dropdown">
                                <option value="">Selecione</option>
                                @foreach (var m in Model.Municipios)
                                {
                                    <option value="@m.CodigoMunicipio">@m.Nome-@m.UF</option>
                                }
                            </select>
                        </div>
                        <div class="two wide field">
                            <input type="submit" class="ui tiny button" value="Pesquisar" />
                        </div>
                    </div>
                    <div class="ui error message"></div>
                </form>
            </div>
        </div>
        @if (Model.Estatisticas != null)
        {
            <div class="row">
                <div class="column">
                    @if (Model.Estatisticas != null)
                    {
                        foreach(var p in Model.Estatisticas.Prestadores)
                        {
                            <h4>@p</h4>
                        }
                        <div class="ui blue center aligned segment">
                            <div class="ui mini stackable statistics" style="justify-content: center;">
                                <div class="ui statistic">
                                    <div class="value">
                                        @Model.Estatisticas.AG003
                                    </div>
                                    <div class="label">
                                        Número de Economias Ativas<br />Água
                                    </div>
                                </div>
                                <div class="ui small statistic">
                                    <div class="value">
                                        @Model.Estatisticas.ES003
                                    </div>
                                    <div class="label">
                                        Número de Economias Ativas<br />Esgoto
                                    </div>
                                </div>
                                <div class="ui small statistic">
                                    <div class="value">
                                        @Model.Estatisticas.AG005
                                    </div>
                                    <div class="label">
                                        Extensão da Rede<br />Água
                                    </div>
                                </div>
                                <div class="ui small statistic">
                                    <div class="value">
                                        @Model.Estatisticas.AG005
                                    </div>
                                    <div class="label">
                                        Extensão da Rede<br />Água
                                    </div>
                                </div>
                                <div class="ui small statistic">
                                    <div class="value">
                                        @Model.Estatisticas.ES004
                                    </div>
                                    <div class="label">
                                        Extensão da Rede<br />Esgoto
                                    </div>
                                </div>
                                <div class="ui small statistic">
                                    <div class="value">
                                        @Model.Estatisticas.IN055
                                    </div>
                                    <div class="label">
                                        Atendimento de Água
                                    </div>
                                </div>
                                <div class="ui small statistic">
                                    <div class="value">
                                        @Model.Estatisticas.IN056
                                    </div>
                                    <div class="label">
                                        Atendimento de Esgoto
                                    </div>
                                </div>
                                <div class="ui small statistic">
                                    <div class="value">
                                        @Model.Estatisticas.IN049
                                    </div>
                                    <div class="label">
                                        Perdas na Distribuição<br />Água
                                    </div>
                                </div>
                                <div class="ui small statistic">
                                    <div class="value">
                                        @Model.Estatisticas.IN012
                                    </div>
                                    <div class="label">
                                        Desempenho Financeiro
                                    </div>
                                </div>
                                <div class="ui small statistic">
                                    <div class="value">
                                        @Model.Estatisticas.IN043
                                    </div>
                                    <div class="label">
                                        Consumo Residencial
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
            <div class="ui two column row">
                @if (Model.PopulacaoAtendimento != null)
                {
                    <div class="ui column">
                        <div id="chartOneContainer" class="ui blue segment"></div>
                    </div>
                }
                @if (Model.ProducaoConsumo != null)
                {
                    <div class="ui column">
                        <div id="chartTwoContainer" class="ui blue segment"></div>
                    </div>

                }
                
            </div>
            <div class="ui two column row">
                @if (Model.PerdasAgua != null)
                {
                    <div class="ui column">
                        <div id="chartThreeContainer" class="ui blue segment"></div>
                    </div>

                }
                <div class="ui column">
                    @if (Model.ReceitaDespesaDesempenho != null)
                    {
                        <div class="ui column">
                            <div id="chartFourContainer" class="ui blue segment"></div>
                        </div>

                    }
                </div>
            </div>
            <div class="ui two column row">
                @if (Model.ParticipacaoDespesas != null)
                {
                    <div class="ui column">
                        <div id="chartFiveContainer" class="ui blue segment"></div>
                    </div>

                }
            </div>  
    </div>
</div>
@section scripts {
    <script>
        $('.ui.form').form({
            fields: {
                CodigoMunicipio: { identifier: 'CodigoMunicipio', rules: [{ type: 'empty', prompt: 'O campo Município é obrigatório' }] },
            }
        });
    </script>
    <script>

        var result_c1 = @Html.Raw(@JsonConvert.SerializeObject(Model.PopulacaoAtendimento))

        var cats = [];
        var populacao = [];
        var atendimentoTotal = [];
        var atendimentoEsgoto = [];

        populacao.name = 'População'
        populacao.data = []

        atendimentoTotal.name = 'Atendimento Total'
        atendimentoTotal.data = []
        atendimentoTotal.yAxis = 1,

        atendimentoEsgoto.name = 'Atendimento Esgoto'
        atendimentoEsgoto.data = []
        atendimentoEsgoto.yAxis = 1,

        $(result_c1).each(function (index) {
            cats.push(result_c1[index].Competencia);

            populacao.data.push(result_c1[index].GE12A);
            atendimentoTotal.data.push(result_c1[index].IN055);
            atendimentoEsgoto.data.push(result_c1[index].IN056);
        });

    Highcharts.chart('chartOneContainer', {
        chart: {
            type: 'line'
        },
        title: {
            text: ''
        },
        subtitle: {
            text: ''
        },
        xAxis: {
            categories: cats
        },
        yAxis: [
            {
                title: { text: 'População na área de cobertura' }
            },
            {
                title: { text: 'Cobertura, %' },
                opposite: true,
                //max: 100
            }],
        tooltip: {
            formatter: function () {
                return '' +
                    this.x + ': ' + Highcharts.numberFormat(this.y, 2, ',', '.') +
                    (this.series.name.indexOf('%') > 0 ? '%' : '');
                //'Coverage with Water Service, %' ? '%' : '');
            }
        },
        plotOptions: {
            line: {
                dataLabels: {
                    enabled: false
                },
                enableMouseTracking: true
            }
        },
        series: [populacao, atendimentoTotal, atendimentoEsgoto]
    });
    </script>

    <script>

        var result_c2 = @Html.Raw(@JsonConvert.SerializeObject(Model.ProducaoConsumo))

        var cats = [];
        var volumeProduzido = [];
        var volumeConsumido = [];
        var volumeFaturado = [];

        volumeProduzido.name = 'Volume de Água Produzido'
        volumeProduzido.data = []

        volumeConsumido.name = 'Volume Consumido'
        volumeConsumido.data = []

        volumeFaturado.name = 'Volume Faturado'
        volumeFaturado.data = []

        $(result_c2).each(function (index) {
            cats.push(result_c1[index].Competencia);

            volumeProduzido.data.push(result_c2[index].AG006 + result_c2[index].AG018);

            volumeConsumido.data.push(result_c2[index].AG010);

            volumeFaturado.data.push(result_c2[index].AG011);
        });

    Highcharts.chart('chartTwoContainer', {
        chart: {
            type: 'line'
        },
        title: {
            text: ''
        },
        subtitle: {
            text: ''
        },
        xAxis: {
            categories: cats
        },
        yAxis: [
            {
                title: { text: 'Produção e Consumo' }
            }],
        tooltip: {
            formatter: function () {
                return '' +
                    this.x + ': ' + Highcharts.numberFormat(this.y, 2, ',', '.') +
                    (this.series.name.indexOf('%') > 0 ? '%' : '');
                //'Coverage with Water Service, %' ? '%' : '');
            }
        },
        plotOptions: {
            line: {
                dataLabels: {
                    enabled: false
                },
                enableMouseTracking: true
            }
        },
        series: [volumeProduzido, volumeConsumido, volumeFaturado]
    });
    </script>

    <script>

        var result_c3 = @Html.Raw(@JsonConvert.SerializeObject(Model.PerdasAgua))

        var cats = [];
        var perdasDistribuicao = [];
        var perdasLineares = [];

        perdasDistribuicao.name = '- Índice de Perdas na Distribuição'
        perdasDistribuicao.data = []

        perdasLineares.name = 'Índice de Perdas Lineares'
        perdasLineares.data = []

        $(result_c3).each(function (index) {
            cats.push(result_c3[index].Competencia);

            perdasDistribuicao.data.push(result_c3[index].IN049);
            perdasLineares.data.push(result_c3[index].IN050);
        });

        Highcharts.chart('chartThreeContainer', {
            chart: {
                type: 'line'
            },
            title: {
                text: ''
            },
            subtitle: {
                text: ''
            },
            xAxis: {
                categories: cats
            },
            yAxis: [
                {
                    title: { text: 'Perdas de Água' }
                }],
            tooltip: {
                formatter: function () {
                    return '' +
                        this.x + ': ' + Highcharts.numberFormat(this.y, 2, ',', '.') +
                        (this.series.name.indexOf('%') > 0 ? '%' : '');
                    //'Coverage with Water Service, %' ? '%' : '');
                }
            },
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: false
                    },
                    enableMouseTracking: true
                }
            },
            series: [perdasDistribuicao, perdasLineares]
        });
    </script>

    <script>

        var result_c4 = @Html.Raw(@JsonConvert.SerializeObject(Model.ReceitaDespesaDesempenho))

                        var cats = [];
                        var receitaTotal = [];
                        var despesaTotal = [];
                        var desempenho = [];

                        desempenho.name = 'Desempenho';
                        desempenho.data = [];
                        desempenho.yAxis = 1;

                        receitaTotal.name = 'Receitas por M³ Faturado'
                        receitaTotal.data = []
                        receitaTotal.type = 'column';

                        despesaTotal.name = 'Despesa por M³ Faturado'
                        despesaTotal.data = []
                        despesaTotal.type = 'column';

                        $(result_c4).each(function (index) {
                            cats.push(result_c4[index].Competencia);

                            receitaTotal.data.push(result_c4[index].IN004);
                            despesaTotal.data.push(result_c4[index].IN003);
                            desempenho.data.push(result_c4[index].IN012);
                        });

                        Highcharts.chart('chartFourContainer', {

                            chart: {
                                defaultSeriesType: 'line'
                            },
                            title: {
                                text: ''
                            },
                            subtitle: {
                                text: ''
                            },
                            xAxis: {
                                categories: cats
                            },
                            yAxis: [{
                                title: {
                                    text: 'Receita e Custos, R$',
                                }
                            }, {
                                title: {
                                    text: 'Operações',
                                    style: {
                                        color: '#4572A7'
                                    }
                                },
                                labels: {
                                    formatter: function () {
                                        return Highcharts.numberFormat(this.value) + '';
                                    },
                                    style: {
                                        color: '#4572A7'
                                    }
                                },
                                opposite: true
                                }],
                            tooltip: {
                                formatter: function () {
                                    return '' + this.x + ': ' + (this.series.name == 'Desempenho' ? '' : 'R$ ') + Highcharts.numberFormat(this.y);
                                }
                            },
                            plotOptions: {
                                line: {
                                    dataLabels: {
                                        enabled: false
                                    },
                                    enableMouseTracking: true
                                }
                            },
                            series: [receitaTotal, despesaTotal, desempenho]
                        });
    </script>

    <script>

        var result_c5 = @Html.Raw(@JsonConvert.SerializeObject(Model.ParticipacaoDespesas))

        Highcharts.chart('chartFiveContainer',
            {
                chart: {
                    margin: [0, 0, 40, 0],
                    spacing: [0, 0, 20, 0]
                },
                title: {
                    text: ''//'Consumption Break-Down, 2016'
                },
                tooltip: {
                    formatter: function () {
                        return '<b>' + this.point.name + '</b><br /> ' + Math.round(this.percentage) + ' %';
                    }
                },
                plotOptions: {
                    pie: {
                        allowPointSelect: true,
                        size: '75%',
                        cursor: 'pointer',
                        showInLegend: true,
                        dataLabels: {
                            enabled: true,
                            formatter: function () {
                                return Math.round(this.percentage) + ' %';
                            }
                        }
                    }
                },
                series: [{
                    type: 'pie',
                    name: 'Custos',
                    data: [
                        {
                            name: 'Pessoal Total',
                            y: parseFloat(result_c5.IN036),
                            sliced: true,
                            selected: true
                        },
                        {
                            name: 'Produtos Químicos',
                            y: parseFloat(result_c5.IN038),
                            sliced: true,
                            selected: true
                        },
                        {
                            name: 'Energia elétrica',
                            y: parseFloat(result_c5.IN037),
                            sliced: true,
                            selected: true

                        },
                        {
                            name: 'Outras Despesas',
                            y: parseFloat(result_c5.IN039),
                            sliced: true,
                            selected: true

                        }
                    ]
                }]
            });

    </script>

}