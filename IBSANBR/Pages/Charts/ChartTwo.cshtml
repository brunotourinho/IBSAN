@page
@using Newtonsoft.Json;
@model ChartTwoModel
<partial name="_Header" />
<div style="background-color:#f2f2f2;min-height:100%; margin: 16px 0 0 0;">
    <div class="ui grid container">
        <div class="row">
            <div class="column">
                <h2>Chart One</h2>
                <form method="post" class="ui form tiny principal-form">
                    <div class="four wide field">
                        <label>Municípios</label>
                        <select asp-for="CodigoMunicipio" class="ui search selection dropdown">
                            <option value="">Selecione</option>
                            @foreach (var m in Model.Municipios)
                            {
                                <option value="@m.CodigoMunicipio">@m.Nome-@m.UF</option>
                            }
                        </select>
                    </div>
                    <div class="ui error message"></div>
                    <input type="submit" class="ui tiny button" value="Pesquisar" />
                </form>
            </div>
        </div>
        <div class="ui two column row">
            <div class="ui column">
                @if (Model.PopulacaoCobertura != null)
                {
                    <div id="chartContainer" class="ui blue segment"></div>
                }
            </div>
            <div class="ui column"></div>
        </div>
    </div>
</div>
@section scripts {
    <script>

        var result = @Html.Raw(@JsonConvert.SerializeObject(Model.PopulacaoCobertura))

        $('.ui.form').form({
            fields: {
                MunicipiosSelecionados: { identifier: 'MunicipiosSelecionados', rules: [{ type: 'greaterThan[0]', prompt: 'Selecione pelo menos um  Município' }] },
            }
        });

        var cats = [];
        var populacao = [];
        var atendimentoTotal = [];
        var atendimentoUrbano = [];

        populacao.name = 'População'
        populacao.data = []

        atendimentoTotal.name = 'Atendimento Total'
        atendimentoTotal.data = []

        atendimentoUrbano.name = 'Atendimento Urbano'
        atendimentoUrbano.data = []

        $(result).each(function (index) {
            cats.push(result[index].Competencia);

            populacao.data.push(result[index].GE12A);

            atendimentoTotal.data.push(
               ((result[index].AG001 / result[index].GE12A) * 100)
            );
            atendimentoUrbano.data.push(
                ((result[index].ES026 / result[index].GE06A) * 100)
            );
        });

        Highcharts.chart('chartContainer', {
            chart: {
                type: 'line'
            },
            title: {
                text: ''
            },
            subtitle: {
                text: ''
            },
            xAxis: {
                categories: cats
            },
            yAxis: {
                title: {
                    text: 'População na área de cobertura'
                }
            },
            tooltip: {
                formatter: function () {
                    return 'Ano: ' + this.x.toString() + ' ' + Highcharts.numberFormat(this.y, 2, ',', '.');
                }
            },
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: false
                    },
                    enableMouseTracking: true
                }
            },
            series: [populacao, atendimentoTotal, atendimentoUrbano]
        });
    </script>
}
